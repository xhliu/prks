<?xml version="1.0" ?><interfacedef loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc" nicename="tos.lib.rfxlink.layers.SoftwareAckConfig" qname="SoftwareAckConfig">
      <function command="" loc="86:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc" name="reportChannelError" provided="0" ref="0x409fa1f0">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>
 This command is called when a sent packet did not receive an
 acknowledgement.</short>
          <long>
 This command is called when a sent packet did not receive an
 acknowledgement.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.lib.rfxlink.layers.SoftwareAckConfig" qname="SoftwareAckConfig"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc" name="createAckPacket" provided="0" ref="0x409fcd20">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>
 Creates an acknowledgement packet for the given data packet.</short>
          <long>
 Creates an acknowledgement packet for the given data packet.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.lib.rfxlink.layers.SoftwareAckConfig" qname="SoftwareAckConfig"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
            <type-pointer alignment="I:2" size="I:2">
              <type-tag alignment="I:1" size="I:138"><nx_struct-ref name="message_t" ref="0x40707430"/>
                <typename><typedef-ref name="message_t" ref="0x407051e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer alignment="I:2" size="I:2">
              <type-tag alignment="I:1" size="I:138"><nx_struct-ref name="message_t" ref="0x40707430"/>
                <typename><typedef-ref name="message_t" ref="0x407051e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc" name="data" ref="0x409fc9a8">
            <type-pointer alignment="I:2" size="I:2">
              <type-tag alignment="I:1" size="I:138"><nx_struct-ref name="message_t" ref="0x40707430"/>
                <typename><typedef-ref name="message_t" ref="0x407051e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc" name="ack" ref="0x409fcbc0">
            <type-pointer alignment="I:2" size="I:2">
              <type-tag alignment="I:1" size="I:138"><nx_struct-ref name="message_t" ref="0x40707430"/>
                <typename><typedef-ref name="message_t" ref="0x407051e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc" name="requiresAckWait" provided="0" ref="0x409fecd8">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>
 Returns TRUE if the layer should wait for a software acknowledgement
 to be received after this packet was transmitted.</short>
          <long>
 Returns TRUE if the layer should wait for a software acknowledgement
 to be received after this packet was transmitted.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.lib.rfxlink.layers.SoftwareAckConfig" qname="SoftwareAckConfig"/>
        <type-function alignment="I:1" size="I:1">
          <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
            <typename><typedef-ref name="bool" ref="0x4032de80"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer alignment="I:2" size="I:2">
              <type-tag alignment="I:1" size="I:138"><nx_struct-ref name="message_t" ref="0x40707430"/>
                <typename><typedef-ref name="message_t" ref="0x407051e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc" name="msg" ref="0x409feb80">
            <type-pointer alignment="I:2" size="I:2">
              <type-tag alignment="I:1" size="I:138"><nx_struct-ref name="message_t" ref="0x40707430"/>
                <typename><typedef-ref name="message_t" ref="0x407051e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc" name="isAckPacket" provided="0" ref="0x409fd3b8">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>
 Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>
 Returns TRUE if the received packet is an acknowledgement packet.
 The AckedSend layer will filter out all received acknowledgement
 packets and uses  only the matching one for the acknowledgement.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.lib.rfxlink.layers.SoftwareAckConfig" qname="SoftwareAckConfig"/>
        <type-function alignment="I:1" size="I:1">
          <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
            <typename><typedef-ref name="bool" ref="0x4032de80"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer alignment="I:2" size="I:2">
              <type-tag alignment="I:1" size="I:138"><nx_struct-ref name="message_t" ref="0x40707430"/>
                <typename><typedef-ref name="message_t" ref="0x407051e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc" name="msg" ref="0x409fd260">
            <type-pointer alignment="I:2" size="I:2">
              <type-tag alignment="I:1" size="I:138"><nx_struct-ref name="message_t" ref="0x40707430"/>
                <typename><typedef-ref name="message_t" ref="0x407051e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc" name="verifyAckPacket" provided="0" ref="0x409fdcf0">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>
 Returns TRUE if the acknowledgement packet corresponds to the
 data packet.</short>
          <long>
 Returns TRUE if the acknowledgement packet corresponds to the
 data packet. The acknowledgement packect was already verified 
 to be a valid acknowledgement packet via the isAckPacket command.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.lib.rfxlink.layers.SoftwareAckConfig" qname="SoftwareAckConfig"/>
        <type-function alignment="I:1" size="I:1">
          <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
            <typename><typedef-ref name="bool" ref="0x4032de80"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer alignment="I:2" size="I:2">
              <type-tag alignment="I:1" size="I:138"><nx_struct-ref name="message_t" ref="0x40707430"/>
                <typename><typedef-ref name="message_t" ref="0x407051e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer alignment="I:2" size="I:2">
              <type-tag alignment="I:1" size="I:138"><nx_struct-ref name="message_t" ref="0x40707430"/>
                <typename><typedef-ref name="message_t" ref="0x407051e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc" name="data" ref="0x409fd978">
            <type-pointer alignment="I:2" size="I:2">
              <type-tag alignment="I:1" size="I:138"><nx_struct-ref name="message_t" ref="0x40707430"/>
                <typename><typedef-ref name="message_t" ref="0x407051e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc" name="ack" ref="0x409fdb90">
            <type-pointer alignment="I:2" size="I:2">
              <type-tag alignment="I:1" size="I:138"><nx_struct-ref name="message_t" ref="0x40707430"/>
                <typename><typedef-ref name="message_t" ref="0x407051e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc" name="getAckTimeout" provided="0" ref="0x40a04d30">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>
 Returns the acknowledgement timeout (in the radio clock units),
 in which a sent packet must be acknowledged.</short>
          <long>
 Returns the acknowledgement timeout (in the radio clock units),
 in which a sent packet must be acknowledged.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.lib.rfxlink.layers.SoftwareAckConfig" qname="SoftwareAckConfig"/>
        <type-function alignment="I:1" size="I:1">
          <type-int alignment="I:2" cname="unsigned int" size="I:2" unsigned="">
            <typename><typedef-ref name="uint16_t" ref="0x40037010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc" name="setAckRequired" provided="0" ref="0x409fe618">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>
 Sets the flag in the message indicating to the receiver whether
 the message should be acknowledged.</short>
          <long>
 Sets the flag in the message indicating to the receiver whether
 the message should be acknowledged.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.lib.rfxlink.layers.SoftwareAckConfig" qname="SoftwareAckConfig"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
            <type-pointer alignment="I:2" size="I:2">
              <type-tag alignment="I:1" size="I:138"><nx_struct-ref name="message_t" ref="0x40707430"/>
                <typename><typedef-ref name="message_t" ref="0x407051e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="bool" ref="0x4032de80"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc" name="msg" ref="0x409fe2f0">
            <type-pointer alignment="I:2" size="I:2">
              <type-tag alignment="I:1" size="I:138"><nx_struct-ref name="message_t" ref="0x40707430"/>
                <typename><typedef-ref name="message_t" ref="0x407051e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc" name="ack" ref="0x409fe4b8">
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="bool" ref="0x4032de80"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc" name="requiresAckReply" provided="0" ref="0x409fc460">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>
 Returns TRUE if the received packet needs software acknowledgements
 to be sent back to the sender.</short>
          <long>
 Returns TRUE if the received packet needs software acknowledgements
 to be sent back to the sender.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.lib.rfxlink.layers.SoftwareAckConfig" qname="SoftwareAckConfig"/>
        <type-function alignment="I:1" size="I:1">
          <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
            <typename><typedef-ref name="bool" ref="0x4032de80"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer alignment="I:2" size="I:2">
              <type-tag alignment="I:1" size="I:138"><nx_struct-ref name="message_t" ref="0x40707430"/>
                <typename><typedef-ref name="message_t" ref="0x407051e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc" name="msg" ref="0x409fc308">
            <type-pointer alignment="I:2" size="I:2">
              <type-tag alignment="I:1" size="I:138"><nx_struct-ref name="message_t" ref="0x40707430"/>
                <typename><typedef-ref name="message_t" ref="0x407051e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>