<?xml version="1.0" ?><component abstract="" loc="49:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc" nicename="tos.system.SimpleArbiterP" qname="SimpleArbiterP" safe="">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>
 Please refer to TEP 108 for more information about this component and its
 intended use.&lt;br&gt;&lt;br&gt;

 This component provides the Resource, ArbiterInfo, and ResourceRequested
 interfaces and uses the ResourceConfigure interface as
 described in TEP 108.</short>
        <long>
 Please refer to TEP 108 for more information about this component and its
 intended use.&lt;br&gt;&lt;br&gt;

 This component provides the Resource, ArbiterInfo, and ResourceRequested
 interfaces and uses the ResourceConfigure interface as
 described in TEP 108.  It provides arbitration to a shared resource.
 An queue is used to keep track of which users have put
 in requests for the resource.  Upon the release of the resource by one
 of these users, the queue is checked and the next user
 that has a pending request will ge granted control of the resource.  If
 there are no pending requests, then the resource becomes idle and any
 user can put in a request and immediately receive access to the
 Resource.
 
 @author Kevin Klues (klues@tkn.tu-berlin.de)
 @author Philip Levis
</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    <specification><interface loc="52:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc" name="ResourceRequested" provided="1" ref="0x40b13e28">
      <component-ref nicename="tos.system.SimpleArbiterP" qname="SimpleArbiterP"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="ResourceRequested" ref="0x40b13e28" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.interfaces.ResourceRequested" qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
          <typename><typedef-ref name="uint8_t" ref="0x40036dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" ref="0x40b12050" scoped=""/>
        <function-ref name="immediateRequested" ref="0x40b12130" scoped=""/>
      </interface-functions>
    </interface><interface loc="56:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc" name="ResourceConfigure" provided="0" ref="0x40b12aa8">
      <component-ref nicename="tos.system.SimpleArbiterP" qname="SimpleArbiterP"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="ResourceConfigure" ref="0x40b12aa8" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.interfaces.ResourceConfigure" qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
          <typename><typedef-ref name="uint8_t" ref="0x40036dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" ref="0x40b12c80" scoped=""/>
        <function-ref name="configure" ref="0x40b12d60" scoped=""/>
      </interface-functions>
    </interface><interface loc="57:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc" name="Queue" provided="0" ref="0x40b11010">
      <component-ref nicename="tos.system.SimpleArbiterP" qname="SimpleArbiterP"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="Queue" ref="0x40b11010" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.interfaces.ResourceQueue" qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" ref="0x40b111e8" scoped=""/>
        <function-ref name="isEmpty" ref="0x40b112c8" scoped=""/>
        <function-ref name="isEnqueued" ref="0x40b113a8" scoped=""/>
        <function-ref name="dequeue" ref="0x40b11488" scoped=""/>
      </interface-functions>
    </interface><interface loc="51:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc" name="Resource" provided="1" ref="0x40b13400">
      <component-ref nicename="tos.system.SimpleArbiterP" qname="SimpleArbiterP"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="Resource" ref="0x40b13400" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.interfaces.Resource" qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
          <typename><typedef-ref name="uint8_t" ref="0x40036dc8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" ref="0x40b135d8" scoped=""/>
        <function-ref name="immediateRequest" ref="0x40b136b8" scoped=""/>
        <function-ref name="request" ref="0x40b13798" scoped=""/>
        <function-ref name="granted" ref="0x40b13878" scoped=""/>
        <function-ref name="isOwner" ref="0x40b13958" scoped=""/>
      </interface-functions>
    </interface><interface loc="53:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc" name="ArbiterInfo" provided="1" ref="0x40b122e0">
      <component-ref nicename="tos.system.SimpleArbiterP" qname="SimpleArbiterP"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="ArbiterInfo" ref="0x40b122e0" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.interfaces.ArbiterInfo" qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" ref="0x40b124b8" scoped=""/>
        <function-ref name="userId" ref="0x40b12598" scoped=""/>
      </interface-functions>
    </interface><interface loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc" name="grantedTask" provided="0" ref="0x40b10c88">
      <component-ref nicename="tos.system.SimpleArbiterP" qname="SimpleArbiterP"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="grantedTask" ref="0x40b10c88" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.interfaces.TaskBasic" qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" ref="0x40b10e60" scoped=""/>
        <function-ref name="runTask" ref="0x40b0f010" scoped=""/>
      </interface-functions>
    </interface></specification><referenced/></component>